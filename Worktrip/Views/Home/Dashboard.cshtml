@using Worktrip.Models
@model UserInfoViewModel
@{
    ViewBag.Title = "Worktrip";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html;charset=UTF-8">

    <meta charset="utf-8">

    <!-- <link href="css/layout.min.css" rel="stylesheet"> -->

    
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    @Styles.Render("~/Content/bootstrap.min.css")
    @Styles.Render("~/Content/font-awesome.min.css")


    @Styles.Render("~/Content/css/select2.min.css")
    @Styles.Render("~/Content/css/select2-bootstrap.min.css")
    @Styles.Render("~/Content/csspin-boxes.css")

    @Styles.Render("~/Content/dropzonecss")

    @Styles.Render("~/Content/dashboard.css")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Scripts/select2.js")

    @Scripts.Render("~/bundles/dropzone")

    <script src="https://js.braintreegateway.com/js/braintree-2.27.0.min.js"></script>>

    @Html.Partial("_GA")

    <script>
        //auto logout after 10 minutes

        var logoutTimer;
        function logout() {
            document.getElementById('logoutForm').submit();
        }

        function resetTimer() {
            clearTimeout(logoutTimer);
            logoutTimer = setTimeout(logout, 1000 * 60 * 10);
        }

        window.onload = resetTimer;
        document.onmousemove = resetTimer;
        document.onkeypress = resetTimer;
        document.onload = resetTimer;
        document.onmousemove = resetTimer;
        document.onmousedown = resetTimer;
        document.ontouchstart = resetTimer;
        document.onclick = resetTimer;  
        document.onscroll = resetTimer; 
        document.onkeypress = resetTimer;
    </script>

    <script>
        var prefetchedUserTaxInfo = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        var brainTreeInited = false;
        var client_token = "@ViewBag.BraintreeToken";
        var curTaxYear = parseInt("@DateTime.Now.AddYears(-1).ToString("yyyy")");
        var isAdmin = @(ViewBag.IsAdmin ? "true" : "false");

        function refreshPersonalInfo(userInfo) {
            $(".input-confirm").addClass("hidden");

            $("#Personal-info input").each(function(){
                var info = userInfo[$(this).attr("name")];

                var $editButton = $(this).next(".input-group-btn");

                $(this)
                    .val("")
                    .removeAttr("disabled");

                $editButton.addClass("hidden");

                if (info != null) {
                    $(this)
                        .val(info)
                        .attr("disabled", "");

                    $editButton.removeClass("hidden");
                }
            });
            


            //populate airline and base airport based on tax year
            var taxYear = $("#taxYear").text();

            $("#base-airport-select").empty();

            if (userInfo.TaxInfos[taxYear]) {

                var existingCode = userInfo.TaxInfos[taxYear].BaseAirportCode;

                if (existingCode) {
                    $("#base-airport-select")
                        .val(existingCode);

                    if (!$("#base-airport-select").val()){

                        $("#base-airport-select")
                            .append("<option value='" + existingCode + "'></option>")
                            .val(existingCode);
                    }

                    $("#base-airport-select").nextAll(".input-group-btn").removeClass("hidden");
                    $("#base-airport-select").attr("disabled", "");
                } else {
                    $("#base-airport-select").val("");
                    $("#base-airport-select").removeAttr("disabled");
                    $("#base-airport-select").nextAll(".input-group-btn").addClass("hidden");
                }

                var existingAirline = userInfo.TaxInfos[taxYear].Airline;

                if (existingAirline) {
                    $("#airline-select").val(existingAirline).trigger("change");

                    $("#airline-select").nextAll(".input-group-btn").removeClass("hidden");
                    $("#airline-select").attr("disabled", "");

                } else {
                    $("#airline-select").val("");
                    $("#airline-select").removeAttr("disabled");
                    $("#airline-select").nextAll(".input-group-btn").addClass("hidden");
                }

            } else {
                $("#base-airport-select").val("");
                $("#base-airport-select").removeAttr("disabled");
                $("#base-airport-select").nextAll(".input-group-btn").addClass("hidden");

                $("#airline-select").val("");
                $("#airline-select").removeAttr("disabled");
                $("#airline-select").nextAll(".input-group-btn").addClass("hidden");
            }

            refreshStatusbar(userInfo, taxYear);
        }

        function refreshTaxInfo(userInfo, taxYear) {
            $("#training-days-title").text("2. How many days were you training in " + taxYear + "?");

            $("#tax-question input").each(function(){
                if (!userInfo.TaxInfos) {
                    return;
                }

                var taxInfo = userInfo.TaxInfos[taxYear] || {};

                var info = taxInfo[$(this).attr("name")];

                $(this)
                    .val("")
                    .removeAttr("disabled");

                var $addOn = $(this).prev(".input-group-addon");
                var $editButton = $(this).next(".input-group-btn");

                $addOn.removeClass("input-group-disabled");
                $editButton.addClass("hidden");

                if (info != null) {
                    $(this)
                        .val(info)
                        .attr("disabled", "");

                    $addOn.addClass("input-group-disabled");
                    $editButton.removeClass("hidden");
                }
            });

            if (userInfo.TaxInfos[taxYear]) {

                $("#international-layover-checkbox").prop('checked', userInfo.TaxInfos[taxYear].InternationalLayovers);
                //show or hide navigation Items based on InternationalLayovers boolean
                if (userInfo.TaxInfos[taxYear].InternationalLayovers) {
                    $("#wSch-status-item").prop("style").display = "inherit";
                    $("#wSch-arrow").prop("style").display = "inherit";
                    $("#tQuest-status-item").prop("style").display = "inherit";
                    $("#tQuest-arrow").prop("style").display = "inherit";
                    $("#wSch-side-item").prop("style").display = "inherit";
                    $("#tQuest-side-item").prop("style").display = "inherit";
                } else {
                    $("#wSch-status-item").prop("style").display = "none";
                    $("#wSch-arrow").prop("style").display = "none";
                    $("#tQuest-status-item").prop("style").display = "none";
                    $("#tQuest-arrow").prop("style").display = "none";
                    $("#wSch-side-item").prop("style").display = "none";
                    $("#tQuest-side-item").prop("style").display = "none";
                }

                var existingState = userInfo.TaxInfos[taxYear].DLState;

                if (existingState) {
                    $("#dl-select").val(existingState);

                    $("#dl-select").nextAll(".input-group-btn").removeClass("hidden");
                    $("#dl-select").attr("disabled", "");
                } else {
                    $("#dl-select").val("");
                    $("#dl-select").removeAttr("disabled");
                    $("#dl-select").nextAll(".input-group-btn").addClass("hidden");
                }
            } else {
                $("#dl-select").val("");
                $("#dl-select").removeAttr("disabled");
                $("#dl-select").nextAll(".input-group-btn").addClass("hidden");
            }

            //update refund amount if it exists
            $("#refund-amount").text(
                userInfo.TaxInfos && userInfo.TaxInfos[taxYear] && userInfo.TaxInfos[taxYear].TaxReturn ?
                    "$" + userInfo.TaxInfos[taxYear].TaxReturn : "Processing"
            );

            refreshStatusbar(userInfo, taxYear);
        }

        function refreshQuestions(userInfo, taxYear) {
            $("#asked-questions ul").empty();

            if (!userInfo.Questions || !userInfo.Questions[taxYear]) {
                $("#asked-questions").addClass("hidden");
                return;
            }

            $("#asked-questions").removeClass("hidden");

            for(var q in userInfo.Questions[taxYear]) {
                var question = userInfo.Questions[taxYear][q];

                $("#asked-questions ul").append(
                    "<li>" +
                        "<div>" + question.QuestionText + "</div>" +
                        (question.AnswerText ? "<div class='q-answer'>" + question.AnswerText + " <span class='q-answerer'>- " + (question.AnsweredBy || "") + "</span></div>" : "") +
                     "</li>"
                );
            }
        }

        function bTofa(bool) {
            return bool ?  "fa-check-circle" : "fa-exclamation-circle";
        }

        function fillStatusIcon($el, status) {
            $el.attr("class","").addClass("fa " + bTofa(status));
        }

        function refreshStatusbar(userInfo, year) {
            var pInfoDone = true;

            if (!userInfo.TaxInfos || !userInfo.TaxInfos[year]) {
                pInfoDone = false;
            } else {
                for (var p in userInfo) {
                    if (userInfo[p] == null && p != "MiddleName") {
                        pInfoDone = false;
                    }
                }

                if (userInfo.TaxInfos[year].BaseAirportCode == null ||
                    userInfo.TaxInfos[year].Airline == null) {
                    pInfoDone = false;
                }
            }

            fillStatusIcon($("#pInfo-status .fa"), pInfoDone);


            var questionsDone = true;

            if (!userInfo.TaxInfos || !userInfo.TaxInfos[year]) {
                questionsDone = false;
            } else {
                for (var t in userInfo.TaxInfos[year]) {
                    if (userInfo.TaxInfos[year][t] == null) {
                        questionsDone = false;
                    }
                }
            }

            fillStatusIcon($("#tQuest-status .fa"), questionsDone);
        }

        function refreshPaymentView(userInfo)
        {
            //$("#payment-div").show();
            //$("#payment-not-ready").hide();
            //return;

            $("#make-payment>div").hide();

            if (userInfo.Statuses && userInfo.Statuses[curTaxYear]) {
                switch (userInfo.Statuses[curTaxYear].Status) {
                    case "WaitingCustomerPayment":
                        $("#payment-div").show();
                        break;
                    case "Finished":
                        $("#payment-finished").show();
                        break;
                    default:
                        $("#payment-not-ready").show();
                        break;
                }
            } else {
                $("#payment-not-ready").show();
            }
        }

        function refreshDashboardViews(userInfo, year) {

            refreshPersonalInfo(userInfo);

            refreshTaxInfo(userInfo, year);

            refreshQuestions(userInfo, year);

            refreshPaymentView(userInfo, year);
        }

        var brainTreeSetup = false;
        function setupBrainTree() {

            if (brainTreeSetup || brainTreeInited) {
                return;
            }

            brainTreeSetup = true;

            braintree.setup(client_token, "dropin", {
                container: "bt-dropin",
                paypal: {
                    headless: true
                },
                onReady: function(){
                    brainTreeInited = true;
                    $("#credit-cards-img").fadeIn(500);
                },
                onPaymentMethodReceived: function (obj) {
                    // Do some logic in here.
                    // When you're ready to submit the form:
                    $("#loading-cover").show();

                    $.ajax({
                        url: "/Home/MakePayment",
                        type: "POST",
                        data: {
                            paymentNonce: obj.nonce,
                            transactionYear: curTaxYear
                        },
                        success: function(response){
                            $("#loading-cover").fadeOut(500);

                            if (response.status == 0){
                                $("#make-payment>div").hide();
                                $("#payment-finished").fadeIn(500);
                            } else {
                                alert("Something went wrong with processing your payment, please try again later or contact us");
                            }
                        }
                    });
                }
            });
        }

        function dataURIToBlob(dataURI, callback) {

            var binStr = atob(dataURI.split(',')[1]),
                len = binStr.length,
                arr = new Uint8Array(len),
                mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]

            for (var i = 0; i < len; i++) {
                arr[i] = binStr.charCodeAt(i);
            }

            return new Blob([arr], {
                type: mimeString
            });

        }

        function downloadDataURI(dataURI, filename) {

            var blob = dataURIToBlob(dataURI);
            var url = URL.createObjectURL(blob);
            var blobAnchor = document.createElement('a');

            blobAnchor.download = filename;
            blobAnchor.href = url;
            blobAnchor.style.display = "none;";

            document.body.appendChild(blobAnchor);

            blobAnchor.click();

            requestAnimationFrame(function () {
                URL.revokeObjectURL(url);
                document.body.removeChild(blobAnchor);
            });
        }

        function getTaxYear() {
            var selectedTaxYear = $("#taxYear").text();
            var curUserId = prefetchedUserTaxInfo.Id;
            document.getElementById("hiddenTaxYearLogin").value = selectedTaxYear;
            document.getElementById("hiddenUserId").value = curUserId;
        }

        function downloadTaxReturn() {
            $.ajax({
                cache: false,
                url: "/Home/GetuserTaxReturn",
                type: "POST",
                data: {
                    userId: prefetchedUserTaxInfo.Id,
                    taxYear: $("#taxYear").text()
                },
                success: function (response) {
                    if (response.status == 0 && response.files.length > 0) {
                        if (!$('div#tax-return-container').is(":visible")) {
                            console.log('in' + elemId);
                            $('div.box-dashboard-container').hide();
                            $('div#Personal-info').hide();
                            $('div#tax-question').hide();
                            $('div#make-payment').hide();
                            $('div#tax-documents-container').hide();
                            $('div#tax-return-container').fadeIn(500);
                            $('div#no-tax-return-container').hide();
                            $('div#work-schedule-container').hide();
                            $('div.btn-container').css('background', '#999');
                            elem.closest('div.btn-container').css('background', '#E74139');

                            if (!$('div#options .menu-dashboard').is(":visible"))
                                $('div.left-menu-collapse').slideUp(500);
                        }
                    }
                    else {
                        if (!$('div#tax-return-container').is(":visible")) {
                            console.log('in' + elemId);
                            $('div.box-dashboard-container').hide();
                            $('div#Personal-info').hide();
                            $('div#tax-question').hide();
                            $('div#make-payment').hide();
                            $('div#tax-documents-container').hide();
                            $('div#tax-return-container').hide();
                            $('div#no-tax-return-container').fadeIn(500);
                            $('div#work-schedule-container').hide();
                            $('div.btn-container').css('background', '#999');
                            elem.closest('div.btn-container').css('background', '#E74139');

                            if (!$('div#options .menu-dashboard').is(":visible"))
                                $('div.left-menu-collapse').slideUp(500);
                        }
                    }
                },
                complete: function () {
                    $("#loading-cover").fadeOut(500);
                }
            });
        }

        $(function(){
            $("#welcome-popup").css("opacity", 1);

            refreshDashboardViews(prefetchedUserTaxInfo, $("#taxYear").text());

            $("#Personal-info>div>.input-group>input").change(function () {
                //check for valid zip code format
                if ($(this).attr("name") == "Zip") {
                    var isValidZip = /(^\d{5}$)|(^\d{5}-\d{4}$)/.test(this.value);
                    if (isValidZip == true) {
                        $("#save-personal-info-btn").trigger("click", { "passive": true });
                        $("#zip-error-label").prop("style").display = "none";
                    } else {
                        $("#zip-error-label").prop("style").display = "initial";
                    }
                } else {
                    $("#save-personal-info-btn").trigger("click", { "passive": true });
                }
            });

            $("#Personal-info>div>.input-group>select").on("select2:select", function(){
                $("#save-personal-info-btn").trigger("click", {"passive":true});
            });

            $("#tax-question input").change(function(){
                $("#save-tax-info-btn").trigger("click", {"passive":true});
            })

            $("#save-personal-info-btn").click(function(e, obj){

                if ($("#bankaccountnumber-input").is(":enabled") &&
                    $("#bankaccountnumber-input").val()){

                    $("#bankaccountnumber-confirm").removeClass("input-invalid");

                    if ($("#bankaccountnumber-confirm").is(":visible")){
                        if ($("#bankaccountnumber-input").val() != $("#bankaccountnumber-confirm > input").val()) {
                            //display alert
                            $("#bankaccountnumber-confirm > input").addClass("input-invalid");
                            return;
                        }
                    }
                }

                if ($("#routingnumber-input").is(":enabled") &&
                    $("#routingnumber-input").val()){

                    $("#routingnumber-confirm").removeClass("input-invalid");

                    if ($("#routingnumber-confirm").is(":visible")){
                        if ($("#routingnumber-input").val() != $("#routingnumber-confirm > input").val()) {
                            //display alert
                            $("#routingnumber-confirm > input").addClass("input-invalid");
                            return;
                        }
                    }
                }

                if (!obj || !obj.passive) {
                    $("#loading-cover").show();
                }

                var updateInfo = {};

                $("#Personal-info input").each(function(){
                    var fieldProperty = $(this).attr("name");

                    var info = prefetchedUserTaxInfo[fieldProperty];

                    if (info != null || info === null) {
                        //Filter out undefined fields
                        updateInfo[fieldProperty] = $(this).val();
                    }
                });

                var state = $("#state-select").val();
                if (state != null || state === null) {
                    updateInfo["State"] = state;
                }

                var taxYear = $("#taxYear").text();

                if (taxYear && ($("#airline-select").val() || $("#base-airport-select").val())) {
                    updateInfo.TaxInfos = {};

                    updateInfo.TaxInfos[taxYear] = {
                        Year: taxYear,
                        BaseAirportCode: $("#base-airport-select").val(),
                        Airline: $("#airline-select").val()
                    };
                }

                $.ajax({
                    url: "/Home/UpdatePersonalInfo",
                    type: "POST",
                    data: updateInfo,
                    success: function(userInfo){
                        refreshPersonalInfo(userInfo);
                    },
                    complete: function(){
                        $("#loading-cover").fadeOut(500);

                        if (!obj || !obj.passive) {
                            $(window).scrollTop(0);
                            $('div.left-menu-collapse').slideDown(500);
                        }
                    }
                });
            });

            $("#international-layover-checkbox").change(function (e, obj) {
                if (!obj || !obj.passive) {
                    $("#loading-cover").show();
                }

                var taxYear = $("#taxYear").text();

                var updateInfo = { TaxInfos: {} };

                updateInfo.TaxInfos[taxYear] = { Year: taxYear };

                $("#tax-question input").each(function () {
                    var fieldProperty = $(this).attr("name");

                    var val = $(this).val();

                    if (fieldProperty == "DaysInTrainingOrAway") {
                        //parse in case we get inputs like '10 days'
                        val = parseInt(val);
                    } else {
                        val = parseFloat(val.replace(/[^0-9\.]/g, ""));
                    }

                    if (isNaN(val)) {
                        val = "";
                    }

                    //Filter out undefined fields
                    updateInfo.TaxInfos[taxYear][fieldProperty] = val;
                });

                updateInfo.TaxInfos[taxYear]['DLState'] = $("#dl-select").val();
                updateInfo.TaxInfos[taxYear]['InternationalLayovers'] = e.target.checked;

                $.ajax({
                    url: "/Home/UpdateTaxInfo",
                    type: "POST",
                    data: updateInfo,
                    success: function (userInfo) {
                        refreshTaxInfo(userInfo, $("#taxYear").text());
                    },
                    complete: function () {
                        $("#loading-cover").fadeOut(500);

                    }
                });
            });

            $("#save-tax-info-btn").click(function(e, obj){
                if (!obj || !obj.passive){
                    $("#loading-cover").show();
                }

                var taxYear = $("#taxYear").text();

                var updateInfo = {TaxInfos: {}};

                updateInfo.TaxInfos[taxYear] = {Year: taxYear};

                $("#tax-question input").each(function(){
                    var fieldProperty = $(this).attr("name");

                    var val = $(this).val();

                    if (fieldProperty == "DaysInTrainingOrAway") {
                        //parse in case we get inputs like '10 days'
                        val = parseInt(val);
                    } else {
                        val = parseFloat(val.replace( /[^0-9\.]/g, ""));
                    }

                    if (isNaN(val)) {
                        val = "";
                    }

                    //Filter out undefined fields
                    updateInfo.TaxInfos[taxYear][fieldProperty] = val;
                });

                updateInfo.TaxInfos[taxYear]['DLState'] = $("#dl-select").val();

                $.ajax({
                    url: "/Home/UpdateTaxInfo",
                    type: "POST",
                    data: updateInfo,
                    success: function(userInfo){
                        refreshTaxInfo(userInfo, $("#taxYear").text());
                    },
                    complete: function(){
                        $("#loading-cover").fadeOut(500);

                    }
                });
            });

            $("#airline-select").select2({
                theme: "bootstrap",
                placeholder: "Select your airline",
                allowClear: true
            });

            $("#base-airport-select").select2({
                theme: "bootstrap",
                placeholder: "Search airports...",
                allowClear: true,
                ajax: {
                    url: "/Home/SearchAirports",
                    dataType: 'json',
                    delay: 250,
                    processResults: function (data) {
                        var results = [];

                        $.each(data, function (index, airport) {
                            results.push({
                                id: airport.Id,
                                text: airport.Text
                            });
                        });

                        return {
                            results: results
                        };
                    },
                    cache: true
                },
                templateResult: function (item) {
                    if (item.id && item.text) {
                        return "<span>" + item.id + " (" + item.text + ")</span>";
                    }

                    return item.id || item.text;
                },
                templateSelection: function (item) {
                    if (item.id && item.text) {
                        return "<span>" + item.id + " (" + item.text + ")</span>";
                    }

                    return item.id || item.text;
                },
                escapeMarkup: function (markup) { return markup; },
                minimumInputLength: 1,
                language: {
                    inputTooShort: function(args) {
                        return "Search by airport code or name";
                    }
                }
            });

            // edit button on click
            $('.input-edit').on('click', function (e) {
                $(this)
                    .parent()
                    .addClass("hidden")
                    .prevAll("input,select")
                    .removeAttr("disabled")
                    .focus()
                        .prev(".input-group-addon").removeClass("input-group-disabled");
            });

            // tax year change
            $('.dropdown-a').on('click', function (e) {
                e.preventDefault();

                var value = $(this).text();

                $('#taxYear,#base-airport-date').text(value);

                $("#loading-cover").show();

                $(".dropzoneArea").each(function(){
                    //remove all dropzone files
                    $(this)[0].dropzone.removeAllFiles();
                });

                $.ajax({
                    url: "/Home/GetPersonalInfo",
                    type: "POST",
                    data: {},
                    success: function(userInfo){
                        refreshDashboardViews(userInfo, $("#taxYear").text());
                        //Return view to Personal Info
                        if (!$('div#Personal-info').is(":visible")) {
                            console.log('in' + elemId);
                            $('div.box-dashboard-container').hide();
                            $('div#Personal-info').fadeIn(500);
                            $('div#tax-question').hide();
                            $('div#make-payment').hide();
                            $('div#tax-documents-container').hide();
                            $('div#tax-return-container').hide();
                            $('div#no-tax-return-container').hide();
                            $('div#work-schedule-container').hide();
                            $('div.btn-container').css('background', '#999');
                            elem.closest('div.btn-container').css('background', '#E74139');

                            if (!$('div#options .menu-dashboard').is(":visible"))
                                $('div.left-menu-collapse').slideUp(500);
                        }
                    },
                    complete: function(){
                        $("#loading-cover").fadeOut(500);
                    }
                });


            });

            $("#submit-question-btn").click(function(){

                if ($("#question-textarea").val() == "") {
                    return;
                }

                $("#loading-cover").show();

                $.ajax({
                    url: "/Home/SubmitQuestion",
                    type: "POST",
                    data: {
                        question: $("#question-textarea").val(),
                        taxYear: parseInt($("#taxYear").text())
                    },
                    success: function(userInfo){
                        refreshQuestions(userInfo, $("#taxYear").text());
                        $("#question-textarea").val("");
                    },
                    complete: function(){
                        $("#loading-cover").fadeOut(500);
                    }
                });
            });

            $(".guide-container").click(function(){
                var linkId = "#" + $(this).attr("id").replace(/-.*/, "");

                $(linkId).click();
            })

            $(".popup-close").click(function(){
                $(this).closest(".dashboard-popup").fadeOut(300);
            });

            $(".dashboard-popup").on("click", function(e){
                if ($(e.target).attr("class") == $(this).attr("class")) {
                    $(this).fadeOut(300);
                }
            });

            if (prefetchedUserTaxInfo.FirstTimeLogin) {
                $("#welcome-popup").removeClass("hidden");

                $.ajax({
                    type: "POST",
                    url: "/Home/UpdateFirstTimeLogin"
                });
            }

            $(".content-center").on("click", function(){
                if (!$('div#options .menu-dashboard').is(":visible")) {
                    $('div.left-menu-collapse').slideUp(500);
                }
            });

            $("#payment-submit").click(function(){
                $("#payment-btn-hidden").click();
            });

            $("#bankaccountnumber-input").on("keyup", function(){
                $("#bankaccountnumber-confirm").removeClass("hidden");
                $("#bankaccountnumber-confirm > input").removeClass("input-invalid");
            });

            $("#bankaccountnumber-confirm > input").on("keyup", function(){
                $(this).removeClass("input-invalid");
            });

            $("#routingnumber-input").on("keyup", function(){
                $("#routingnumber-confirm").removeClass("hidden");
                $("#routingnumber-confirm > input").removeClass("input-invalid");
            });

            $("#routingnumber-confirm > input").on("keyup", function(){
                $(this).removeClass("input-invalid");
            });

            $("#dd-tooltip").tooltip().click(function(e){
                e.preventDefault();
            });

            Dropzone.options.taxDropzone = {
                maxFilesize: 10,
                dictDefaultMessage: "Drop files here or click to upload",
                autoProcessQueue : true,
                init: function () {
                    this.on("addedfile", function (file) {
                        //if (file.type.indexOf('pdf') >= 0) {
                        //    var pdfURL = URL.createObjectURL(file);

                        //    parsePDFText(pdfURL);
                        //}
                    });

                    this.on("sending", function (file, xhr, formData) {
                        formData.append("taxYear", parseInt($("#taxYear").text()));

                    });

                    this.on("success", function (file) {
                        var response = JSON.parse(file.xhr.response);

                        if (response.status == 0) {
                            setTimeout(function(){
                                $(".dz-success-mark", file.previewElement).css("opacity", 1);
                            }, 500);

                            var $uploadAlert = $("<div class='alert alert-success' role='alert'>" + file.name +  " was successfully uploaded</div>");
                            $uploadAlert.appendTo($("#taxdropzone-alerts"));

                            setTimeout(function(){
                                $uploadAlert.slideUp(500);
                            }, 2000);
                        } else {
                            alert("We failed to upload your file, please try again later");
                        }
                    });

                    this.on("complete", function (file) {
                    });

                    this.on("queuecomplete", function(){

                    });
                }
            }


            Dropzone.options.csvDropzone = {
                maxFilesize: 3,
                dictDefaultMessage: "Drop files here or click to upload",
                acceptedFiles: ".csv,.xls,.xlsx",
                autoProcessQueue : true,
                init: function () {
                    this.on("addedfile", function (file) {
                        if (file.name.match(/\.csv$/i)) {
                            var reader = new FileReader();
                            var parsedCSV = {};
                            var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
                            var layoverDict = [];

                            reader.onload = function (e) {
                                var lines = e.target.result.split('\n');

                                parsedCSV.numRows = lines.length;

                                lines.forEach(function (line, rowNum) {
                                    line.split(',').forEach(function (word, wordNum) {
                                        parsedCSV[chars[wordNum] + (rowNum + 1)] = word.trim();
                                    });
                                });

                                for (var rowIt = 2; rowIt <= parsedCSV.numRows; rowIt) {
                                    var curRotation = parsedCSV['A' + rowIt];
                                    var lastLayover = null;
                                    var lastLayoverDate = null;

                                    while (parsedCSV['A' + rowIt] == curRotation) {

                                        var layover = parsedCSV['J' + rowIt];

                                        if (layover) {
                                            lastLayover = layover;
                                            lastLayoverDate = new Date(parsedCSV['P' + rowIt]);

                                            if (!layoverDict[layover]) {
                                                layoverDict[layover] = 0;
                                            }

                                            if (parsedCSV['A' + (rowIt + 1)] == curRotation) {
                                                var milliseconds = (new Date(parsedCSV['P' + (rowIt + 1)])) - (new Date(parsedCSV['P' + rowIt]));

                                                var days = milliseconds / 1000 / 3600 / 24;

                                                layoverDict[layover] += days;
                                            }
                                        }

                                        rowIt++;
                                    }

                                    if (lastLayover) {
                                        layoverDict[lastLayover]++;
                                    }
                                }

                                //flatten layoverDict

                                var layovers = [];

                                for (var l in layoverDict) {
                                    layovers.push({ AirportCode: l, Days: layoverDict[l] });
                                }

                                $.ajax({
                                    url: "/Home/CalculatePerDiem",
                                    type: "POST",
                                    data: {
                                        taxYear: parseInt($("#taxYear").text()),
                                        layovers: layovers
                                    },
                                    success: function (response) {
                                        $("#loading-cover").fadeOut(500);
                                    }
                                });

                            };

                            reader.readAsText(file);
                        }

                    });

                    this.on("sending", function (file, xhr, formData) {
                        formData.append("taxYear", parseInt($("#taxYear").text()));
                        //formData.append("subFolder", "Layover CSVs");
                    });

                    this.on("success", function (file) {
                        var response = JSON.parse(file.xhr.response);

                        if (response.status == 0) {
                            setTimeout(function(){
                                $(".dz-success-mark", file.previewElement).css("opacity", 1);
                            }, 500);

                            var $uploadAlert = $("<div class='alert alert-success' role='alert'>" + file.name +  " was successfully uploaded</div>");
                            $uploadAlert.appendTo($("#csvdropzone-alerts"));

                            setTimeout(function(){
                                $uploadAlert.slideUp(500);
                            }, 2000);

                        } else {
                            alert("We failed to upload your file, please try again later");
                        }
                    });

                    this.on("complete", function (file) {
                    });

                    this.on("queuecomplete", function(){
                    });
                }
            }
        });

        function getPageText(pageNum, PDFDocumentInstance) {
            // Return a Promise that is solved once the text of the page is retrieven
            return new Promise(function (resolve, reject) {
                PDFDocumentInstance.getPage(pageNum).then(function (pdfPage) {
                    pdfPage.getTextContent().then(function (textContent) {
                        resolve(textContent.items);
                    });
                });
            });
        }

        function getAllText(PDFDocumentInstance) {
            return new Promise(function (resolve, reject) {
                var result = [];

                (function textWorker(pageNumber) {
                    getPageText(pageNumber, PDFDocumentInstance).then(function (textArray) {
                        result = result.concat(textArray);

                        if (pageNumber < PDFDocumentInstance.pdfInfo.numPages) {
                            textWorker(pageNumber + 1);
                        } else {
                            resolve(result);
                        }
                    });
                })(1);
            });
        }

        function parsePDFText(pdfURL) {
            PDFJS.getDocument(pdfURL).then(function (PDFDocumentInstance) {
                getPageText(1, PDFDocumentInstance).then(function (textArray) {
                    if (isIRSTranscript(textArray)) {
                        IRSDemo(PDFDocumentInstance, textArray);
                    }
                });

            }, function (reason) {
                // PDF loading error
                console.error(reason);
            });
        }

        function IRSDemo(PDFDocumentInstance, page1) {
            var strIt = 0;
            var taxYear = '';
            var username = '';
            for (var t of page1) {
                if (t.str.indexOf('Tax Period Requested') >= 0) {
                    taxYear = t.str.match(/.*\,.?(\d{4})/)[1];
                }

                if (/employee|participant|recipient/i.test(t.str)) {
                    username = page1[strIt + 1].str.trim();
                }
                strIt++;
            }

            $("#IRS-demo-modal-title").text(`${username} ${taxYear}`);

            $('#IRS-demo-modal').modal();



            populateIRSDemo(1, PDFDocumentInstance);
        }

        function populateIRSDemo(pageNumber, PDFDocumentInstance) {
            getAllText(PDFDocumentInstance).then(function (textArray) {
                var parsedData = [];

                for (var ti = 0; ti < textArray.length; ti++) {
                    var text = textArray[ti].str;
                    var tagSearch = text.toLowerCase().trim();

                    if (formDict[tagSearch]) {
                        var tagData = formDict[tagSearch];
                        var parsedObj = {
                            form: text.trim(),
                            class: formDict[tagSearch].class
                        };

                        for (var tagi = ti + 1; tagi < textArray.length; tagi++) {
                            var formText = textArray[tagi].str;

                            if (formDict[textArray[tagi].str.toLowerCase().trim()]) {
                                // we've found the beginning of a new form
                                break;
                            }

                            for (var tagName in tagData) {
                                var tag = tagData[tagName];

                                if (!parsedObj[tagName] && (new RegExp(tagData[tagName].name, 'i')).test(formText)) {
                                    parsedObj[tagName] = {
                                        tagName: tagData[tagName].name
                                    };

                                    if (typeof tag.offset == 'number') {
                                        parsedObj[tagName].text = textArray[tagi + tag.offset].str.trim();
                                    } else {
                                        parsedObj[tagName].text = formText.substr(formText.lastIndexOf(tag.offset) + 1).trim();
                                    }
                                }
                            }
                        }

                        parsedData.push(parsedObj);
                    }
                }

                animateIRSListAdd(parsedData, 0);
            });
        }

        function animateIRSListAdd(items, i) {
            if (!items[i]) return;

            if (i < items.length) {
                setTimeout(() => animateIRSListAdd(items, i + 1), Math.random() * 1000 + 300);
            }

            var item = items[i];

            $('#IRS-demo-modal-list').append(`
                <li class="new-item ${item.class}">
                    <table class="irs-form-table">
                        <tbody>
                            <tr><td style='width:200px'>Form:</td><td>${item.form}</td></tr>
                            <tr><td>${item.fromTag.tagName}:</td><td>${item.fromTag.text}</td></tr>
                            <tr><td>${item.idTag.tagName}:</td><td>${item.idTag.text}</td></tr>
                            ${item.accTag ? '<tr><td>' + item.accTag.tagName + ':</td><td>' + item.accTag.text + '</td></tr>' : ''}
                        </tbody>
                    </table>
                </li>
            `);

        }

        function isIRSTranscript(textArray) {
            return textArray[0].str.trim() == 'This Product Contains Sensitive Taxpayer Data';
        }

        var formDict = {
            'form w-2 wage and tax statement': {
                fromTag: {
                    name: 'Employer',
                    offset: 2
                },
                toTag: {
                    name: 'Employee',
                    offset: 2
                },
                idTag: {
                    name: 'EIN',
                    offset: ':'
                },
                class: 'form-w-2'
            },
            'form 5498 sa': {
                fromTag: {
                    name: 'Trustee',
                    offset: 2
                },
                toTag: {
                    name: 'Participant',
                    offset: 2
                },
                idTag: {
                    name: 'FIN',
                    offset: ':'
                },
                accTag: {
                    name: 'Account Number',
                    offset: '.'
                },
                class: 'form-5498-sa'
            },
            'form 1099-b proceeds from broker and barter exchange transactions': {
                fromTag: {
                    name: 'Payer',
                    offset: 2
                },
                toTag: {
                    name: 'Recipient',
                    offset: 2
                },
                idTag: {
                    name: 'FIN',
                    offset: ':'
                },
                accTag: {
                    name: 'Account Number',
                    offset: '.'
                },
                class: 'form-1099-b'
            },
            'form 1099-div': {
                fromTag: {
                    name: 'Payer',
                    offset: 2
                },
                toTag: {
                    name: 'Recipient',
                    offset: 2
                },
                idTag: {
                    name: 'FIN',
                    offset: ':'
                },
                accTag: {
                    name: 'Account Number',
                    offset: '.'
                },
                class: 'form-1099-div'
            },
            'form 1099-int': {
                fromTag: {
                    name: 'Payer',
                    offset: 2
                },
                toTag: {
                    name: 'Recipient',
                    offset: 2
                },
                idTag: {
                    name: 'FIN',
                    offset: ':'
                },
                accTag: {
                    name: 'Account Number',
                    offset: '.'
                },
                class: 'form-1099-int'
            },
            'form 1099-sa': {
                fromTag: {
                    name: 'Payer',
                    offset: 2
                },
                toTag: {
                    name: 'Recipient',
                    offset: 2
                },
                idTag: {
                    name: 'FIN',
                    offset: ':'
                },
                accTag: {
                    name: 'Account Number',
                    offset: '.'
                },
                class: 'form-1099-sa'
            }
        };
    </script>

</head>
<body style="background-color: #f1f1f1;">

    <div id="loading-cover">
        <div class="cp-spinner cp-boxes"></div>
    </div>

    <div id="welcome-popup" class="dashboard-popup hidden">
        <div class="popup">
            <h2 class=ribbon>
                <i><u>Taxes the Easy Way</u></i>
            </h2>
            <div style="padding:25px;padding-top:10px;font-weight:bold;display:flex;flex-direction:column;align-items:center;">
                <div>
                    Welcome to our secure dashboard! One of our tax professionals will contact you shortly. If you'd like to get started:
                </div>
                <br />
                <ul>
                    <li>Fill out your personal info</li>
                    <li>Upload tax document images</li>
                    <li>Answer tax questions</li>
                </ul>
            </div>

            <div class="popup-close"><i class="fa fa-close"></i></div>
        </div>
    </div>

    <div class="nav-bar-container container">

        <div class="navbar navbar-inverse navbar-fixed-top nav-bar-inner">
            <div class="container navbar-doublerow-fix">
                <div class="navbar-header" style="padding-bottom: 18px;">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" style="margin-right:25px;">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" style="padding:20px !important;">
                        <img src="~/Content/img/logo.png" width="150" alt="WorkTrip">
                    </a>
                </div>
                <div class="collapse navbar-collapse navbar-right">
                    <ul class="nav navbar-nav navbar-ul" style= "display: flex;align-items: center;">
                        <li class="navbar-left dropdown" style="width:100%;">
                            <a id="btnUser" class="same-height dropdown-toggle" data-toggle="dropdown" href="#">
                                @(Model.FirstName + " " + Model.LastName) <span class="caret"></span>
                            </a>
                            <ul class="dropdown-menu" style="background: #152D58;">
                                @*<li class="borderB"><a style="color: #fff" href="#">Payment Info</a></li>*@
                                <li><a href="javascript:document.getElementById('logoutForm').submit()" style="color: #fff">Sign out</a></li>
                            </ul>
                        </li>

                        @*hide refer a friend button*@
                        @*<li><a class="same-height getStarted" id="refer-btn" href="#">Refer a Friend</a></li>*@

                    </ul>

                </div><!--/.nav-collapse -->
            </div>
        </div>
    </div>
    <div class="clear-fix"></div>


    <div class="container-fluid container-dashboard">

        <div class="left-menu">
            <div style="height: 100px;cursor:pointer;" id="options">
                <span class="menu-toggle-dashboard menu ">Menu<span class="caret"></span></span>
                <span class="menu-toggle-dashboard menu-dashboard">Dashboard</span>
            </div>

            <div class="left-menu-collapse ">
                <ul>
                    <!-- <li class="dashboard-button-container">
        <div class="btn-container" style="background: #E74139;">
        <div class="dashboard-icon-cotainer">
            <img src="img/dashboard.png" />
            </div>
        <div class="dashboard-button-name">
            <a id="dashboard">Dashboard</a>
            </div>

        </div>
    </li> -->

                    <li class="dashboard-button-container">
                        <div class="btn-container" style="background: #E74139;">
                            <div class="dashboard-icon-cotainer">
                                <img src="~/Content/img/user.png" />
                            </div>
                            <div class="dashboard-button-name">
                                <a id="pInfo">Personal Info</a>
                            </div>
                        </div>
                    </li>

                    <li class="dashboard-button-container">
                        <div class="btn-container">
                            <div class="dashboard-icon-cotainer">
                                <img src="~/Content/img/file.png" />
                            </div>
                            <div class="dashboard-button-name">
                                <a id="tDoc">Tax Documents</a>
                            </div>
                        </div>
                    </li>

                    <li id="wSch-side-item" class="dashboard-button-container">
                        <div class="btn-container">
                            <div class="dashboard-icon-cotainer">
                                <img src="~/Content/img/Layover.png" />
                            </div>
                            <div class="dashboard-button-name">
                                <a id="wSch">Layovers</a>
                            </div>
                        </div>
                    </li>
                    <li id="tQuest-side-item" class="dashboard-button-container">
                        <div class="btn-container">
                            <div class="dashboard-icon-cotainer">
                                <img src="~/Content/img/Question.png" />
                            </div>
                            <div class="dashboard-button-name">
                                <a id="tQuest">Tax Questions</a>
                            </div>
                        </div>
                    </li>
                    <li class="dashboard-button-container">
                        <div class="btn-container">
                            <div class="dashboard-icon-cotainer">
                                <img src="~/Content/img/money.png" />
                            </div>
                            <div class="dashboard-button-name">
                                <a id="mPay">Sign and Pay</a>
                            </div>
                        </div>
                    </li>
                    <li class="dashboard-button-container">
                        <div class="btn-container">
                            <div class="dashboard-icon-cotainer">
                                <img src="~/Content/img/money.png" />
                            </div>
                            <div class="dashboard-button-name">
                                <a id="tReturn">Tax Return</a>
                            </div>
                        </div>
                    </li>
                </ul>

            </div>
        </div>
        <div class="top-menu">
            <div class="row">
                <!--  <div class="col-md-3 col-sm-12">
                 <div  class="taxes-dropdown-container dropdown ">
                        <a class="same-height dropdown-toggle" data-toggle="dropdown" href="#"><span id="taxYear">2016</span> Taxes <span class="caret"></span>    </a>
                        <ul class="dropdown-menu" style="background: #152D58;">
                             <li class="borderB"><a style="color: #fff" href="#">2016</a></li>
                             <li class="borderB"><a style="color: #fff" href="#">2015</a></li>
                             <li><a href="#" style="color: #fff">2014</a></li>
                        </ul>
                    </div>

                 </div > -->
                <div class="container ">
                    <ul class="nav navbar-nav" style="width: 100% !important;">
                        <!-- <li  class="navbar-left dropdown custom-width taxYear-container"><a  class="same-height dropdown-toggle" data-toggle="dropdown" href="#"><span id="taxYear">2016</span>  Taxes<span class="caret"></span>    </a>
        <ul class="dropdown-menu " style="background: #152D58;">
             <li class="borderB"><a style="color: #fff" href="#">2016</a></li>
             <li ><a href="#" style="color: #fff">2015</a></li>
             <li ><a href="#" style="color: #fff">2014</a></li>
        </ul>
    </li> -->

                        <li class="dropdown custom-width taxYear-container">
                            <div class="dropdown" style="margin-bottom: 5px;">
                                <button class="btn btn-primary dropdown-toggle" type="button" style="background: #152D58;" data-toggle="dropdown">
                                    <span id="taxYear">@DateTime.Now.AddYears(-1).ToString("yyyy")</span> taxes
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-taxes" style="background: #152D58; position: absolute;">
                                    <!-- Please add this class="dropdown-a" to every new item -->
                                    <li><a class="dropdown-a" style="color: #fff" href="#">@DateTime.Now.AddYears(-1).ToString("yyyy")</a></li>
                                    <li><a class="dropdown-a" href="#" style="color: #fff">@DateTime.Now.AddYears(-2).ToString("yyyy")</a></li>
                                    <li><a class="dropdown-a" href="#" style="color: #fff">@DateTime.Now.AddYears(-3).ToString("yyyy")</a></li>
                                </ul>
                            </div>
                            <div style="color:#e74139;font-size:16px;padding:8px">
                                Your refund: <span id="refund-amount" class="text-success" style="font-weight:bold;">$1234</span>
                            </div>
                        </li>
                        <li class="top-menu-steps-items">
                            <div id="pInfo-status" class="guide-container">
                                <div class="guide-message">
                                    <i class="fa" aria-hidden="true"></i>
                                    <p>Check Personal Info</p>
                                </div>
                            </div>

                        </li>
                        <li class="top-menu-steps-items">
                            <div class="arrow-right"></div>
                        </li>
                        <li class="top-menu-steps-items">
                            <div id="tDoc-status" class="guide-container">
                                <div class="guide-message">
                                    <i class="fa" aria-hidden="true"></i>
                                    <p>Upload Documents</p>
                                </div>
                            </div>

                        </li>

                        <li class="top-menu-steps-items"><div class="arrow-right"></div></li>

                        <li id="wSch-status-item" class="top-menu-steps-items">
                            <div id="wSch-status" class="guide-container">
                                <div class="guide-message">
                                    <i class="fa" aria-hidden="true"></i>
                                    <p>Upload Layovers</p>
                                </div>
                            </div>

                        </li>
                        <li id="wSch-arrow" class="top-menu-steps-items"><div class="arrow-right"></div></li>

                        <li id="tQuest-status-item" class="top-menu-steps-items">
                            <div id="tQuest-status" class="guide-container">
                                <div class="guide-message">
                                    <i class="fa" aria-hidden="true"></i>
                                    <p>Tax Questions</p>
                                </div>
                            </div>
                        </li>
                        <li id="tQuest-arrow" class="top-menu-steps-items"><div class="arrow-right"></div></li>
                        <li class="top-menu-steps-items">
                            <div id="mPay-status" class="guide-container">
                                <div class="guide-message">
                                    <i class="fa" aria-hidden="true"></i>
                                    <p>Make a Payment</p>
                                </div>
                            </div>

                        </li>
                        <li class="top-menu-steps-items"><div class="arrow-right"></div></li>
                        <li class="top-menu-steps-items">
                            <div id="tReturn-status" class="guide-container">
                                <div class="guide-message">
                                    <i class="fa" aria-hidden="true"></i>
                                    <p>Tax Return</p>
                                </div>
                            </div>

                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="content-center">
            <div class="row formContainer" style="display: none;" id="tax-question">
                <h2 class="lets-talk-header">Tax Questions</h2>
                <div class="panel with-nav-tabs panel-default" id="questions-panel">
                    <div class="panel-heading">
                        <ul class="nav nav-tabs question-tabs">
                            <li class="active" id="tab1"><a href="#tab1primary" data-toggle="tab">Answer Questions</a></li>
                            <li id="tab2"><a href="#tab2primary" data-toggle="tab">Ask a Question</a></li>
                        </ul>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <div class="tab-pane fade in active" id="tab1primary">
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span class="input-title">1. What state is your Drivers License in?</span><br>
                                <div class="field input-group">
                                    <select class="form-control" name="licenseState" id="dl-select">
                                        <option value="" disabled selected>Select your state</option>
                                        <option value="AL">Alabama</option>
                                        <option value="AK">Alaska</option>
                                        <option value="AZ">Arizona</option>
                                        <option value="AR">Arkansas</option>
                                        <option value="CA">California</option>
                                        <option value="CO">Colorado</option>
                                        <option value="CT">Connecticut</option>
                                        <option value="DE">Delaware</option>
                                        <option value="DC">District Of Columbia</option>
                                        <option value="FL">Florida</option>
                                        <option value="GA">Georgia</option>
                                        <option value="HI">Hawaii</option>
                                        <option value="ID">Idaho</option>
                                        <option value="IL">Illinois</option>
                                        <option value="IN">Indiana</option>
                                        <option value="IA">Iowa</option>
                                        <option value="KS">Kansas</option>
                                        <option value="KY">Kentucky</option>
                                        <option value="LA">Louisiana</option>
                                        <option value="ME">Maine</option>
                                        <option value="MD">Maryland</option>
                                        <option value="MA">Massachusetts</option>
                                        <option value="MI">Michigan</option>
                                        <option value="MN">Minnesota</option>
                                        <option value="MS">Mississippi</option>
                                        <option value="MO">Missouri</option>
                                        <option value="MT">Montana</option>
                                        <option value="NE">Nebraska</option>
                                        <option value="NV">Nevada</option>
                                        <option value="NH">New Hampshire</option>
                                        <option value="NJ">New Jersey</option>
                                        <option value="NM">New Mexico</option>
                                        <option value="NY">New York</option>
                                        <option value="NC">North Carolina</option>
                                        <option value="ND">North Dakota</option>
                                        <option value="OH">Ohio</option>
                                        <option value="OK">Oklahoma</option>
                                        <option value="OR">Oregon</option>
                                        <option value="PA">Pennsylvania</option>
                                        <option value="RI">Rhode Island</option>
                                        <option value="SC">South Carolina</option>
                                        <option value="SD">South Dakota</option>
                                        <option value="TN">Tennessee</option>
                                        <option value="TX">Texas</option>
                                        <option value="UT">Utah</option>
                                        <option value="VT">Vermont</option>
                                        <option value="VA">Virginia</option>
                                        <option value="WA">Washington</option>
                                        <option value="WV">West Virginia</option>
                                        <option value="WI">Wisconsin</option>
                                        <option value="WY">Wyoming</option>
                                    </select>
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span id="training-days-title" class="input-title">2. How many days were you training in ?</span><br>
                                <div class="field input-group">
                                    <input type="text" class="form-control" name="DaysInTrainingOrAway" id="days-input">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>3. Total money spent on cabs, trains, ubers, etc while away on layovers?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="TotalSpentLayoverTransportation">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>4. Currency exchange fees, atm, or foriegn fees on debit/credit cards?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="TransactionalFees">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>5. Uniform fees (and any leggings/pantyhose for ladies)?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="ClothingFees">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>6. Laundry/Dry Cleaning costs for Uniforms?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="LaundryFees">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>7. Flight gear/Luggage?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="FlightGearLuggageFees">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>8. Work Equipment Purchases (Cell Phone, iPad, etc)?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="TechPurchasesFees">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>9. Total Cell Phone Bill for the year?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="CellphoneBill">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>10. Total internet bill? </span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="InternetBill">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>11. Visas, Passport fees, and any misc items needed for work?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="IdentityFees">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <span>12. Total for all other Unreimbursed Employee expenses?</span>
                                <div class="input-group">
                                    <span class="input-group-addon">$</span>
                                    <input placeholder="" type="text" class="form-control" name="UnreimbursedExpenses">
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary input-edit">
                                            <span class="glyphicon glyphicon-edit"></span>
                                        </button>
                                    </span>
                                </div>
                            </div>

                            <div class="col-md-4 col-md-offset-4 col-sm-4 col-sm-offset-4">
                                <br>
                                <button id="save-tax-info-btn" style="width:100%;" type="submit" class="btn btn-primary submit-button">
                                    Save Changes
                                </button>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="tab2primary">
                            <div id="asked-questions" class="messages hidden col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                <h5>Your questions: </h5>
                                <ul></ul>
                                <hr />
                            </div>
                            <div class="controls">

                                <div class="field col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    <span>Write a Question or Concern:</span>
                                    <div class="input-group">
                                        <textarea id="question-textarea" placeholder="Message" type="text" rows="6" class="form-control" name="info"></textarea>
                                    </div>
                                </div>
                                <div class="col-md-4 col-md-offset-4 col-sm-4 col-sm-offset-4">
                                    <br>
                                    <button id="submit-question-btn" style="width:100%;" type="submit" class="btn btn-primary submit-button">
                                        Submit Question
                                    </button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            

            <div class="lets-talk-container2 row formContainer" id="make-payment" style="display: none;">
                <div id="payment-div" style="text-align:center" class="col-xs-12">
                    <div class="row border-document">
                        <h2 class="lets-talk-header">Make a Payment</h2>
                        <br />
                        <div class="col-xs-12 col-xs-offset-0 col-md-5 col-md-offset-1">
                            <form id="payment-form" method="post" action="/checkouts">
                                <img id="credit-cards-img" src="~/Content/img/credit-cards.png" />
                                <section>
                                    <div class="bt-drop-in-wrapper">
                                        <div id="bt-dropin"></div>
                                    </div>
                                </section>
                                <button id="payment-btn-hidden" class="button hidden" type="submit"></button>
                            </form>
                        </div>
                        <div class="col-xs-12 col-xs-offset-0 col-md-4 col-md-offset-1">
                            @{
                                var recentYear = DateTime.Now.AddYears(-1).ToString("yyyy");
                                var fee = (Model.Statuses.ContainsKey(recentYear) ? (Model.Statuses[recentYear].Fee.HasValue ? Model.Statuses[recentYear].Fee.Value : 0) : 0);
                                var tax = Math.Round(fee * 0.07M, 2);
                            }
                            <div>
                                <ul id="checkout-ul">
                                    <li>
                                        <span>Subtotal</span>
                                        <span class="checkout-price">@fee.ToString("C2")</span>
                                    </li>
                                    <li style="border-bottom: 2px solid gray">
                                        <span>Tax</span>
                                        <span class="checkout-price">@tax.ToString("C2")</span>
                                    </li>
                                    <li>
                                        <span>Total</span>
                                        <span class="checkout-price payment-total">@(((fee + tax).ToString("C2")))</span>
                                    </li>
                                </ul>
                                <button id="payment-submit" class="btn btn-success">Pay @(((fee + tax).ToString("C2")))</button>
                            </div>
                        </div>
                    </div>
                    @*<div class="row border-document @(ViewBag.IsAdmin ? "" : "hidden")">
                    <h2 class="lets-talk-header">Sign Documents</h2>
                    <br />
                    <div class="col-xs-12">
                        <img src="~/Content/img/1040x.png" style="width: 250px;cursor:pointer;" id="pdfDemoBtn"/>
                    </div>
                </div>*@
                </div>
                <div id="payment-not-ready" style="text-align:center;" class="border-document col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    <div style="font-size:20px">
                        <i class="fa fa-id-card-o" style="text-align: center; font-size: 50px; color: #e74139;"></i>
                        <br /><br />
                        We still need to perform a final review before filing your taxes.
                        <br /><br />
                        You'll be notified via text when everything is ready to go!
                    </div>
                </div>
                <div id="payment-finished" style="text-align:center;" class="border-document col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    <div style="font-size:20px">
                        <i class="fa" style="text-align: center; font-size: 50px; color:#01af01 ">
                            &#xf00c; &#xf09d;
                        </i>
                        <br /><br />
                        Your payment of <span class="payment-total">@(((fee + tax).ToString("C2")))</span> has been posted.
                        <br /><br />
                        We'll let you know when your taxes are filed!
                        <br />
                        Feel free to contact us for any further questions.
                    </div>
                </div>
            </div>
            <div class="row formContainer" id="Personal-info">

                <h2 class="lets-talk-header">Personal Info</h2>
                <br />
                <div style="z-index:100" class="col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    @*<div class="field input-group">
            <span>First Name</span><br>
            <input type="text" class=" col-10 form-control" name="firstName"><button class="btn btn-primary">
                <span class="glyphicon glyphicon-edit"></span>

            </button>
        </div>*@
                    <span class="input-title">First Name</span><br>
                    <div class="field input-group">
                        <input placeholder="First Name" type="text" class="form-control" name="FirstName" id="firstname-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Middle Name</span><br>
                    <div class="field input-group">
                        <input type="text" class="form-control" name="MiddleName" id="middlename-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Last Name</span><br>
                    <div class="field input-group">
                        <input placeholder="Last Name" type="text" class="form-control" name="LastName" id="lastname-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Airline</span><br>
                    <div class="field input-group">
                        <select class="form-control" name="Airline" id="airline-select">
                            @{
                                foreach (var airline in ViewBag.Airlines)
                                {
                                    @Html.Raw(String.Format("<option value='{0}'>{1}</option>", airline.Name, airline.Name))
                                }
                            }
                        </select>
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Base Airport 1st Day of <span id="base-airport-date">@DateTime.Now.AddYears(-1).ToString("yyyy")</span></span><br>
                    <div class="field input-group select2-bootstrap-append">
                        <select class="form-control" name="BaseAirport" id="base-airport-select"></select>
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <div class="field input-group">
                        <span style="font-weight:bold;">Were Over 50% Of Your Layovers International?&emsp;&emsp;&emsp;Yes</span>
                        <span><input id="international-layover-checkbox" style="display:inline-block; vertical-align:middle" type="checkbox" /></span>
                    </div>
                    <span class="input-title">Email</span><br>
                    <div class="field input-group">
                        <input type="text" class="form-control" name="Email" id="email-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit "></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Phone Number</span><br>
                    <div class="field input-group">
                        <input type="text" class="form-control" name="PhoneNumber" id="phone-number-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Date of Birth</span>
                    <div class="field input-group">
                        <input class="form-control" placeholder="mm/dd/yyyy" type="date" name="DOB" id="dob-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Current Tax Address:</span><br />
                    <span class="input-title">Street:</span><br />
                    <div class="field input-group">
                        <input type="text" class="form-control" name="Address" id="address-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">City:</span><br />
                    <div class="field input-group">
                        <input type="text" class="form-control" name="City" id="city-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">State:</span><br />
                    <div class="field input-group">
                        <select class="form-control" name="State" id="state-select">
                            <option value="" disabled selected>Select your state</option>
                            <option value="AL">Alabama</option>
                            <option value="AK">Alaska</option>
                            <option value="AZ">Arizona</option>
                            <option value="AR">Arkansas</option>
                            <option value="CA">California</option>
                            <option value="CO">Colorado</option>
                            <option value="CT">Connecticut</option>
                            <option value="DE">Delaware</option>
                            <option value="DC">District Of Columbia</option>
                            <option value="FL">Florida</option>
                            <option value="GA">Georgia</option>
                            <option value="HI">Hawaii</option>
                            <option value="ID">Idaho</option>
                            <option value="IL">Illinois</option>
                            <option value="IN">Indiana</option>
                            <option value="IA">Iowa</option>
                            <option value="KS">Kansas</option>
                            <option value="KY">Kentucky</option>
                            <option value="LA">Louisiana</option>
                            <option value="ME">Maine</option>
                            <option value="MD">Maryland</option>
                            <option value="MA">Massachusetts</option>
                            <option value="MI">Michigan</option>
                            <option value="MN">Minnesota</option>
                            <option value="MS">Mississippi</option>
                            <option value="MO">Missouri</option>
                            <option value="MT">Montana</option>
                            <option value="NE">Nebraska</option>
                            <option value="NV">Nevada</option>
                            <option value="NH">New Hampshire</option>
                            <option value="NJ">New Jersey</option>
                            <option value="NM">New Mexico</option>
                            <option value="NY">New York</option>
                            <option value="NC">North Carolina</option>
                            <option value="ND">North Dakota</option>
                            <option value="OH">Ohio</option>
                            <option value="OK">Oklahoma</option>
                            <option value="OR">Oregon</option>
                            <option value="PA">Pennsylvania</option>
                            <option value="RI">Rhode Island</option>
                            <option value="SC">South Carolina</option>
                            <option value="SD">South Dakota</option>
                            <option value="TN">Tennessee</option>
                            <option value="TX">Texas</option>
                            <option value="UT">Utah</option>
                            <option value="VT">Vermont</option>
                            <option value="VA">Virginia</option>
                            <option value="WA">Washington</option>
                            <option value="WV">West Virginia</option>
                            <option value="WI">Wisconsin</option>
                            <option value="WY">Wyoming</option>
                        </select>
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                    </div>
                    <span class="input-title">Zip:</span><br />
                    <div class="field input-group">
                        <input type="text" class="form-control" name="Zip" id="zip-input">
                        <span class="input-group-btn">
                            <button class="btn btn-primary input-edit">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </span>
                        <label id="zip-error-label" style="color:red; display:none">Please Enter A Valid Zip Code</label>
                    </div>
                    <div class="panel panel-warning">
                        <div class="panel-heading">
                            Refund Direct Deposit Information
                            <a id="dd-tooltip" href="#" data-toggle="tooltip" data-placement="top" title="To receive your refunds faster, please enter your bank info. Otherwise, the refund will be mailed to your address on file.">
                                (optional)
                            </a>
                        </div>
                        <div class="panel-body">
                            <span class="input-title">Bank Name</span><br>
                            <div class="field input-group">
                                <input type="text" class="form-control" name="BankName" id="bankname-input">
                                <span class="input-group-btn">
                                    <button class="btn btn-primary input-edit">
                                        <span class="glyphicon glyphicon-edit"></span>
                                    </button>
                                </span>
                            </div>
                            <span class="input-title">Bank Routing Number</span><br>
                            <div class="field input-group">
                                <input type="text" class="form-control" name="RoutingNumber" id="routingnumber-input" />
                                <span class="input-group-btn">
                                    <button class="btn btn-primary input-edit">
                                        <span class="glyphicon glyphicon-edit"></span>
                                    </button>
                                </span>
                            </div>
                            <div id="routingnumber-confirm" class="input-confirm hidden">
                                <span class="input-title">Retype Routing Number</span><br>
                                <input type="text" class="form-control" />
                            </div>
                            <span class="input-title">Bank Account Number</span><br>
                            <div class="field input-group">
                                <input type="text" class="form-control" name="BankAccountNumber" id="bankaccountnumber-input">
                                <span class="input-group-btn">
                                    <button class="btn btn-primary input-edit">
                                        <span class="glyphicon glyphicon-edit"></span>
                                    </button>
                                </span>
                            </div>
                            <div id="bankaccountnumber-confirm" class="input-confirm hidden">
                                <span class="input-title">Retype Account Number</span><br>
                                <input type="text" class="form-control">
                            </div>
                        </div>
                    </div>

                </div>
                <br>
                <div style="z-index:99" class="col-md-4 col-md-offset-4 col-sm-4 col-sm-offset-4">
                    <br />
                    <button id="save-personal-info-btn" style="width:100%;" type="submit" class="btn btn-primary submit-button">
                        Save Changes
                    </button>
                </div>

            </div>

            <div class=" jumbotron file-upload-container" style="display: none;" id="work-schedule-container">

                <div class="row header">
                    <h4 class="text-center">Please Upload .CSV Files Downloaded from Your Crew Portal for All of the Months</h4>
                    <h4 class="text-center">
                        You Worked as a Flight Attendant
                    </h4>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="csvdropzone-alerts"></div>
                        <form action="@Url.Action("UploadUserTaxFile", "Home")" method="post" enctype="multipart/form-data" class="dropzone dropzoneArea" id="csvDropzone">
                            <div class="fallback">
                                <input name="file" type="file" multiple />
                                <input type="submit" value="Upload" />
                            </div>
                        </form>
                        <h5 class="text-center">
                            (For security purposes, we will not show files you have uploaded in a previous session)
                        </h5>
                    </div>
                </div>
            </div> <!-- /container -->
            <div class="jumbotron file-upload-container" id="tax-documents-container" style="display: none;">
                <div class="row header">
                    <h4 class="text-center">Please Upload Pictures or PDFs of Your Tax Documents Here</h4>
                    <h5 class="text-center">
                        (W2’s, 1099-Misc, Healthcare, Bank Interest, Student Loans, Etc)
                    </h5>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="taxdropzone-alerts"></div>
                        <form action="@Url.Action("UploadUserTaxFile", "Home")" method="post" enctype="multipart/form-data" class="dropzone dropzoneArea" id="taxDropzone">
                            <div class="fallback">
                                <input name="file" type="file" multiple />
                                <input type="submit" value="Upload" />
                            </div>
                        </form>
                        <h5 class="text-center">
                            (For security purposes, we will not show files you have uploaded in a previous session)
                        </h5>
                    </div>
                </div>
            </div> <!-- /container -->
            <div class="lets-talk-container2 row formContainer" id="tax-return-container" style="z-index: 999; display: none;overflow-x:hidden;overflow-y:auto;">
                <div class="lets-talk-inner-wrapper">
                    <button type="button" class="close cancel-btn" data-dismiss="div.getStartedDiv">×</button>
                    <h2 class="lets-talk-header">Download Your Return</h2>
                    <p class="subtitle fancy"><span></span></p>
                    <form id="loginForm" action="/Account/GetUserTaxReturn" style="justify-content: center" class="" method="post" role="form" novalidate="novalidate">
                        <div class="input-group" style="visibility: hidden">
                            <input type="hidden" id="hiddenTaxYearLogin" name="taxYear" value="@DateTime.Now.AddYears(-1).ToString("yyyy")" />
                            <input type="hidden" id="hiddenUserId" name="userId" />
                        </div>
                        <div class="clearfix"></div>
                        <div class="row text-center" style="padding: 0px 15px;">
                            <!-- <span style=" color: #999;line-height: 36px; padding-right: 10px;">(Step 2 of 2)</span> -->
                            <button type="submit" id="taxReturnFormSubmit" style="justify-content: center" class="btn btn-primary" onclick="getTaxYear()"> Download  </button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="lets-talk-container2 row formContainer" id="no-tax-return-container" style="display: none;">
                <div id="payment-not-ready" style="text-align:center;" class="border-document col-lg-offset-3 col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12">
                    <div style="font-size:20px">
                        <i class="fa fa-id-card-o" style="text-align: center; font-size: 50px; color: #e74139;"></i>
                        <br /><br />
                        Your Tax Return has not been completed yet. 
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div id="refer-div" class="lets-talk-container" style="z-index: 999; display: none;">

        <div class="lets-talk-inner-wrapper">
            <button type="button" class="close cancel-btn" data-dismiss="#refer-div">×</button>
            <h2 class="lets-talk-header">Refer a Friend</h2>
            <br/>

            <span class="input-title">Your friend's name</span><br>

            <div class="field input-group">
                <input type="text" class="form-control" name="ReferName" id="refer-name">
            </div>

            <span class="input-title">Your friend's phone number</span><br>
            <div class="field input-group">
                <input type="text" class="form-control" name="ReferPhone" id="refer-number">
            </div>
            <br>
            <a class="image-button-over" id="refer-submit" href="#">Refer</a>
        </div>

    </div>

    @{
        using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right hidden" }))
        {
            @Html.AntiForgeryToken()
        }
    }

    <script type="text/javascript">

        var elem = null;
        var elemId = null;

        $(document).ready(function () {

            // show login

            $('li.dashboard-button-container').on('click', function (e) {
                e.preventDefault();

                $("body").scrollTop(0);

                elem = $(this).find('a');

                elemId = elem.attr('id');

                if (elemId == "wSch") {
                    if (!$('div#work-schedule-container').is(":visible")) {
                        console.log('in' + elemId);
                        $('div.box-dashboard-container').hide();
                        $('div#Personal-info').hide();
                        $('div#tax-documents-container').hide();
                        $('div#work-schedule-container').fadeIn(500);
                        $('div#tax-question').hide();
                        $('div#make-payment').hide();
                        $('div#tax-return-container').hide();
                        $('div#no-tax-return-container').hide();
                        if (!$('div#options .menu-dashboard').is(":visible"))
                            $('div.left-menu-collapse').slideUp(500);
                        $('div.btn-container').css('background', '#999');
                        elem.closest('div.btn-container').css('background', '#E74139');

                    }
                }
                else if (elemId == "tQuest") {
                    if (!$('div#tax-question-container').is(":visible")) {
                        console.log('in' + elemId);
                        $('div.box-dashboard-container').hide();
                        $('div#Personal-info').hide();
                        $('div#tax-documents-container').hide();
                        $('div#work-schedule-container').hide();
                        $('div#make-payment').hide();
                        $('div#tax-return-container').hide();
                        $('div#no-tax-return-container').hide();
                        $('div#tax-question').fadeIn(500);
                        if (!$('div#options .menu-dashboard').is(":visible"))
                            $('div.left-menu-collapse').slideUp(500);
                        $('div.btn-container').css('background', '#999');
                        elem.closest('div.btn-container').css('background', '#E74139');

                    }

                } else if (elemId == "mPay") {
                    if (!$('div#make-payment-container').is(":visible")) {
                        console.log('in' + elemId);
                        $('div.box-dashboard-container').hide();
                        $('div#Personal-info').hide();
                        $('div#tax-documents-container').hide();
                        $('div#work-schedule-container').hide();
                        $('div#tax-return-container').hide();
                        $('div#no-tax-return-container').hide();
                        $('div#make-payment').fadeIn(500, function(){
                        });
                        $('div#tax-question').hide();
                        if (!$('div#options .menu-dashboard').is(":visible"))
                            $('div.left-menu-collapse').slideUp(500);
                        $('div.btn-container').css('background', '#999');
                        elem.closest('div.btn-container').css('background', '#E74139');

                        setupBrainTree();
                    }
                } else if (elemId == "tReturn") {
                    downloadTaxReturn();
                } else if (elemId == "tDoc") {
                    if (!$('div#tax-documents-container').is(":visible")) {
                        console.log('in' + elemId);
                        $('div.box-dashboard-container').hide();
                        $('div#Personal-info').hide();
                        $('div#tax-question').hide();
                        $('div#make-payment').hide();
                        $('div#tax-return-container').hide();
                        $('div#no-tax-return-container').hide();
                        $('div#tax-documents-container').fadeIn(500);
                        $('div#work-schedule-container').hide();
                        $('div.btn-container').css('background', '#999');
                        elem.closest('div.btn-container').css('background', '#E74139');

                        if (!$('div#options .menu-dashboard').is(":visible"))
                            $('div.left-menu-collapse').slideUp(500);

                    }

                } else if (elemId == "pInfo") {
                    if (!$('div#Personal-info').is(":visible")) {
                        console.log('in' + elemId);
                        $('div.box-dashboard-container').hide();
                        $('div#tax-return-container').hide();
                        $('div#no-tax-return-container').hide();
                        $('div#Personal-info').fadeIn(500);
                        $('div#tax-documents-container').hide();
                        $('div#work-schedule-container').hide();
                        $('div#tax-question').hide();
                        $('div#make-payment').hide();
                        $('div.btn-container').css('background', '#999');
                        elem.closest('div.btn-container').css('background', '#E74139');

                        if (!$('div#options .menu-dashboard').is(":visible"))
                            $('div.left-menu-collapse').slideUp(500);

                    }


                }
                else if (elemId == "dashboard") {
                    if (!$('div.box-dashboard-container').is(":visible")) {
                        console.log('in' + elemId);
                        $('div.box-dashboard-container').fadeIn(500);
                        $('div#Personal-info').hide();
                        $('div#tax-documents-container').hide();
                        $('div#tax-question').hide();
                        $('div#make-payment').hide();
                        $('div#tax-return-container').hide();
                        $('div#no-tax-return-container').hide();
                        $('div#work-schedule-container').hide();
                        $('div.btn-container').css('background', '#999');
                        if (!$('div#options .menu-dashboard').is(":visible"))
                            $('div.left-menu-collapse').slideUp(500);

                        elem.closest('div.btn-container').css('background', '#E74139');

                    }


                }

            });



            $('#tQuest').on('click', function (e) {
                e.preventDefault();
                if (!$('div#tax-question-container').is(":visible")) {
                    $('div.box-dashboard-container').hide();
                    $('div#Personal-info').hide();
                    $('div#tax-documents-container').hide();
                    $('div#work-schedule-container').hide();
                    $('div#make-payment').hide();
                    $('div#tax-return-container').hide();
                    $('div#no-tax-return-container').hide();
                    $('div#tax-question').fadeIn(500);
                    if (!$('div#options .menu-dashboard').is(":visible"))
                        $('div.left-menu-collapse').slideUp(500);
                    $('div.btn-container').css('background', '#999');
                    $(this).closest('div.btn-container').css('background', '#E74139');

                }

            });


            $('#mPay').on('click', function (e) {
                e.preventDefault();
                if (!$('div#make-payment-container').is(":visible")) {
                    $('div.box-dashboard-container').hide();
                    $('div#Personal-info').hide();
                    $('div#tax-documents-container').hide();
                    $('div#work-schedule-container').hide();
                    $('div#tax-return-container').hide();
                    $('div#no-tax-return-container').hide();
                    $('div#make-payment').fadeIn(500);
                    $('div#tax-question').hide();
                    if (!$('div#options .menu-dashboard').is(":visible"))
                        $('div.left-menu-collapse').slideUp(500);
                    $('div.btn-container').css('background', '#999');
                    $(this).closest('div.btn-container').css('background', '#E74139');

                }

            });


            $('#tReturn').on('click', function (e) {
                e.preventDefault();
                downloadTaxReturn();
            });

            $('#tDoc').on('click', function (e) {
                e.preventDefault();
                if (!$('div#tax-documents-container').is(":visible")) {
                    $('div.box-dashboard-container').hide();
                    $('div#Personal-info').hide();
                    $('div#tax-question').hide();
                    $('div#make-payment').hide();
                    $('div#tax-return-container').hide();
                    $('div#no-tax-return-container').hide();
                    $('div#tax-documents-container').fadeIn(500);
                    $('div#work-schedule-container').hide();
                    $('div.btn-container').css('background', '#999');
                    $(this).closest('div.btn-container').css('background', '#E74139');

                    if (!$('div#options .menu-dashboard').is(":visible"))
                        $('div.left-menu-collapse').slideUp(500);

                }



            });

            $('#pInfo').on('click', function (e) {
                e.preventDefault();
                if (!$('div#Personal-info').is(":visible")) {
                    $('div.box-dashboard-container').hide();
                    $('div#tax-return-container').hide();
                    $('div#no-tax-return-container').hide();
                    $('div#Personal-info').fadeIn(500);
                    $('div#tax-documents-container').hide();
                    $('div#work-schedule-container').hide();
                    $('div#tax-question').hide();
                    $('div#make-payment').hide();
                    $('div.btn-container').css('background', '#999');
                    $(this).closest('div.btn-container').css('background', '#E74139');

                    if (!$('div#options .menu-dashboard').is(":visible"))
                        $('div.left-menu-collapse').slideUp(500);

                }



            });

            $('#dashboard').on('click', function (e) {
                e.preventDefault();
                if (!$('div.box-dashboard-container').is(":visible")) {
                    $('div.box-dashboard-container').fadeIn(500);
                    $('div#Personal-info').hide();
                    $('div#tax-return-container').hide();
                    $('div#no-tax-return-container').hide();
                    $('div#tax-documents-container').hide();
                    $('div#tax-question').hide();
                    $('div#make-payment').hide();
                    $('div#work-schedule-container').hide();
                    $('div.btn-container').css('background', '#999');

                    if (!$('div#options .menu-dashboard').is(":visible"))
                        $('div.left-menu-collapse').slideUp(500);

                    $(this).closest('div.btn-container').css('background', '#E74139');

                }

            });

            $(".menu-dashboard").click(function(){
                $('div.left-menu-collapse').slideDown(500);
            });

            $('div#options .menu').on('click', function (e) {
                e.preventDefault();
                if (!$('div.left-menu-collapse').is(":visible")) {
                    $('div.left-menu-collapse').slideDown(500).show();
                }
                else {
                    $('div.left-menu-collapse').slideUp(500);
                }
            });


            $('#refer-btn').on('click', function (e) {

                $('#refer-div').fadeIn(500);
                $('#refer-div').append($('#btnClose'));

                //$('.navbar-collapse').slideUp(500);
            });

            // $('#btnClose').on('click',function(e){
            //   e.preventDefault();
            //   $('div.getStartedDiv').hide();
            //   $('#btnClose').hide();


            // });


            $('#question-tabs a').on('click', function (e) {
                e.preventDefault();

                $(this).tab('show')
            })

            $('button.cancel-btn').on('click', function () {
                $(this).closest('div.lets-talk-container').hide();
            });

            //        $('#toggle-tax').on('click',function(e){
            //			e.preventDefault();
            //			if(!$('div.taxes-dropdown').is(":visible")){
            //            console.log('yes');
            //                $('div.taxes-dropdown').show();
            //            }
            //            else{
            //                console.log('no');
            //                $('div.taxes-dropdown').hide();
            //            }
            //
            //
            //
            //		});


            $(function () {
                var navMain = $(".navbar-collapse");
                navMain.on("click", "a", null, function () {
                    //navMain.collapse('hide');
                });
            });

            $(function () {
                var navMain = $(".left-menu");
                navMain.on("click", "a", null, function () {

                    //navMain.collapse('hide');

                });
            });
        });

        var fileTypes = ['csv', 'jpg', 'txt'];  //acceptable file types

        function readURL(input) {
            console.log(input);
            if (input[0] != null) {
                var extension = input[0].name.split('.').pop().toLowerCase(),  //file extension from input file
                    isSuccess = fileTypes.indexOf(extension) > -1;  //is extension in acceptable types

                if (isSuccess) { //yes
                    return true;

                }
                else { //no
                    return false;
                }
            }
        }

    </script>

    <div class="modal fade" id="IRS-demo-modal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" style="text-align:center;font-size:26px;" id="IRS-demo-modal-title"></h4>
                </div>
                <div class="modal-body" id="IRS-demo-modal-body">
                    <div id="IRS-demo-modal-info">
                        <ul id="IRS-demo-modal-list" class="effeckt-list" data-effeckt-type="expand-in">
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
